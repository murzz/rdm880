name: Continuous Integration

on: [ push, pull_request ]

jobs:
  build-and-test:
    name: Build and test

    strategy:
      fail-fast: false
      matrix:
        build_type: [ Release, Debug ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    runs-on: ${{ matrix.os }}

    env:
      CONAN_USER_HOME: ${{ github.workspace }}/_conan-user-home

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Python and Pip
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install Conan
        run: pip3 install -r requirements.txt

      - name: Cache Conan packages
        id: cache-conan
        uses: actions/cache@v3
        env:
          cache-name: cache-conan-packages
        with:
          path: ${{ env.CONAN_USER_HOME }}
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('conanfile.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: conan install --install-folder _conan -pr:b=default --build=missing .

      - name: Configure
        run: cmake -B_build -DCMAKE_PROJECT_INCLUDE=${{ github.workspace }}/_conan/conan_paths.cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DRDM_BUILD_TESTS=ON -DRDM_BUILD_EXAMPLES=ON -DCMAKE_VERBOSE_MAKEFILE=ON

      - name: Build
        run: cmake --build _build --config ${{ matrix.build_type }}

      - name: Test
        run: ctest --output-on-failure --test-dir _build --build-config ${{ matrix.build_type }}

  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.0.0

      - name: Lint Markdown files
        uses: actionshub/markdownlint@2.0.2

  static_analysis:
    name: Static analysis

    runs-on: ubuntu-latest

    CONAN_USER_HOME: ${{ github.workspace }}/_conan-user-home

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Conan packages
        id: cache-conan
        uses: actions/cache@v3
        env:
          cache-name: cache-conan-packages
        with:
          path: ${{ env.CONAN_USER_HOME }}
          key: ${{ runner.os }}-${{ matrix.build_type }}-${{ env.cache-name }}-${{ hashFiles('conanfile.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup init_script
        shell: bash
        run: |
          echo "#!/bin/bash
          pip3 install -r requirements.txt
          conan install --install-folder _conan -pr:b=default --build=missing .
          " > init_script.sh

      - name: Run static analysis
        uses: JacobDomagala/StaticAnalysis@v0.0.5
        with:
          cmake_args: -DCMAKE_PROJECT_INCLUDE=_conan/conan_paths.cmake
          init_script: init_script.sh
